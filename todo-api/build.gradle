import org.jooq.codegen.*

buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
        datasourceUrl = 'jdbc:mysql://localhost:3306'
        datasourceUser = 'sa'
        datasourcePassword = 'password'
        schema = 'todos'
    }
    repositories {
		maven {
			url "https://plugins.gradle.org./m2/"
		}
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath"org.jooq:jooq-codegen:3.11.9"
        classpath "org.jooq:jooq-meta-extensions:3.11.9"
        classpath group: 'mysql', name: 'mysql-connector-java', version: '8.0.11'
		classpath('se.transmode.gradle:gradle-docker:1.2')
		classpath "io.franzbecker:gradle-lombok:2.0"
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.4"
	id "io.franzbecker.gradle-lombok" version "2.0"
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'io.franzbecker.gradle-lombok'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin : 'org.flywaydb.flyway'
apply plugin: 'docker'

war {
    baseName = 'todo-api'
    enabled = true
    archiveName = 'todo-api.war'
}

def javaVersion = JavaVersion.VERSION_1_8

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    compile 'org.jooq:jooq:3.11.9'
    compile "org.springframework.boot:spring-boot-starter-actuator"
    runtime 'mysql:mysql-connector-java:8.0.11'
    implementation 'org.projectlombok:lombok:1.18.4'
    compile group: 'org.modelmapper', name: 'modelmapper', version: '0.7.5'
    compile group: 'org.modelmapper.extensions', name: 'modelmapper-jooq', version: '2.3.2'
    testCompile 'junit:junit:4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

flyway {
    url = "${datasourceUrl}?autoReconnect=true&useSSL=false"
    user = "${datasourceUser}"
    password = "${datasourcePassword}"
    schemas = ["${schema}"]
}

def writer = new StringWriter()
def xml = new groovy.xml.MarkupBuilder(writer)
        .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.11.0.xsd') {
    jdbc() {
        driver('com.mysql.cj.jdbc.Driver')
        url("${datasourceUrl}/${schema}?autoReconnect=true&useSSL=false")
        user("${datasourceUser}")
        password("${datasourcePassword}")
    }
    generator() {
        database() {
            inputSchema("${schema}")
            includes('.*')
        }
        generate([:]) {
            pojos true
            daos true
        }
        target() {
            packageName('build/libs')
            directory('src/main/java/db')
        }
    }
}

task copyWar (type:Copy) {
    dependsOn 'war'
    from 'build/libs/todo-api.war'
    into 'build/docker'
}

task buildDocker (type:Docker) {
	dependsOn 'build'
    dependsOn 'copyWar'
	dependsOn 'flywayMigrate'
	tasks.findByName('build').mustRunAfter 'flywayMigrate'
    tasks.findByName('copyWar').mustRunAfter 'build'
	applicationName = 'todo-api'
	dockerfile = file('Dockerfile')
	doFirst {
		copy {
			from war
			into stageDir
		}
	}
}

GenerationTool.generate(writer.toString())